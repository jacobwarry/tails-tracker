{"version":3,"sources":["reducers/index.js","components/Header.js","components/Item.js","components/ItemList.js","actions/index.js","components/Category.js","components/SelectedItem.js","components/SelectedItemList.js","App.js","components/Footer.js","serviceWorker.js","index.js"],"names":["createStore","state","action","length","type","existingItem","filter","item","id","sortIndex","title","image","category","subcategory","Header","href","Item","tooltip","Tooltip","this","props","className","data-id","onClick","onAddItem","OverlayTrigger","placement","overlay","src","alt","React","Component","connect","dispatch","addItem","items","itemsBySubcategory","map","value","index","self","indexOf","forEach","subcategoryName","sort","a","b","push","key","name","Category","toggleItemList","bind","SelectedItem","onDeleteItem","icon","faTimes","size","deleteItem","selectedByCategory","categoryName","App","categories","formatCatgories","data","axios","get","then","res","setState","Footer","Boolean","window","location","hostname","match","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.98f7bdd2.chunk.js","sourcesContent":["import { createStore } from 'redux'\r\n\r\nconst items = (state = [], action) => {\r\n    if (state.length && action.type === 'ADD_ITEM') {\r\n        const existingItem = state.filter((item) => item.id === action.id)[0];\r\n        if (existingItem) {\r\n            return state;\r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case 'ADD_ITEM':\r\n            return [...state, {\r\n                id: action.id,\r\n                sortIndex: action.sortIndex,\r\n                title: action.title,\r\n                image: action.image,\r\n                category: action.category,\r\n                subcategory: action.subcategory\r\n            }];\r\n        case 'DELETE_ITEM':\r\n            return state.filter(({id}) => id !== action.id);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default createStore(items);","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <div>\r\n                <nav>\r\n                    <div>\r\n                        <a href=\"./\">\r\n                            wondrous tails\r\n                        </a>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\n\r\nclass Item extends React.Component {\r\n    render() {\r\n        const tooltip = (\r\n            <Tooltip>{this.props.title}</Tooltip>\r\n        );\r\n\r\n        return (\r\n            <div className=\"item\" data-id={this.props.id} onClick={() => this.props.onAddItem()}>\r\n                <OverlayTrigger placement=\"top\" overlay={tooltip}>\r\n                    <img src={'./images/' + this.props.image} alt={this.props.title} />\r\n                </OverlayTrigger>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Item;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../actions';\r\nimport Item from './Item';\r\n\r\nconst ItemList = ({ items, onAddItem }) => {\r\n\r\n    const itemsBySubcategory = [];\r\n    \r\n    if (items.length) {\r\n        const subcategoryNames = items.map(item => item.subcategory).filter((value, index, self) => self.indexOf(value) === index);\r\n        subcategoryNames.forEach(subcategoryName => {\r\n            const subcategory = {\r\n                'name': subcategoryName,\r\n                'items': items.filter(item => item.subcategory === subcategoryName).sort((a, b) => a.sortIndex > b.sortIndex ? 1 : -1)\r\n            }\r\n            itemsBySubcategory.push(subcategory);\r\n        });\r\n    }\r\n\r\n    return  (\r\n        <div className=\"category-items\">\r\n            {\r\n                itemsBySubcategory.map((subcategory, key) =>\r\n                    <div className=\"subcategory\" key={key}>\r\n                        {subcategory.name !== 'undefined'\r\n                        ? <div className=\"subcategory-title\">{subcategory.name}</div> \r\n                        : ''}\r\n                        <div className=\"subcategory-items\">\r\n                        {subcategory.items.map((item) =>\r\n                            <Item \r\n                                key={item.id}\r\n                                {...item}\r\n                                onAddItem={() => onAddItem(item)}\r\n                            />\r\n                        )}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAddItem: (item) => dispatch(addItem(item))\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ItemList);","export const addItem = (item) => {\r\n    return {\r\n        type: 'ADD_ITEM',\r\n        id: item.id,\r\n        sortIndex: item.sortIndex,\r\n        title: item.title,\r\n        image: item.image,\r\n        category: item.category,\r\n        subcategory: item.subcategory\r\n    };\r\n};\r\n\r\nexport const deleteItem = (id) => {\r\n    return {\r\n        type: 'DELETE_ITEM',\r\n        id\r\n    }\r\n}","import React from 'react';\r\nimport ItemList from './ItemList'\r\n\r\nclass Category extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.toggleItemList = this.toggleItemList.bind(this);\r\n    }\r\n\r\n    toggleItemList() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"category\">\r\n                <div className=\"big-title\" onClick={this.toggleItemList}>{this.props.name}</div>\r\n                <ItemList items={this.props.items} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Category;","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass SelectedItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"selected-item\" data-id={this.props.item.id}>\r\n                <div className=\"item-image\">\r\n                    <img src={'./images/' + this.props.item.image} alt={this.props.item.title} />\r\n                </div>\r\n                <div className=\"item-description\">\r\n                    <div className=\"item-title\">{this.props.item.title}</div>\r\n                    <div className=\"item-subcategory\">{this.props.item.subcategory}</div>\r\n                </div>\r\n                <div className=\"item-actions\">\r\n                    <button className=\"action-btn btn-delete\" onClick={() => this.props.onDeleteItem()}>\r\n                        <FontAwesomeIcon icon={faTimes} size=\"xs\" />\r\n                    </button>                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectedItem;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteItem } from '../actions/';\r\nimport SelectedItem from './SelectedItem';\r\n\r\nconst SelectedItemList = ({items, onDeleteItem}) => {\r\n\r\n    const selectedByCategory = [];\r\n\r\n    if (items.length) {\r\n        items.sort((a, b) => a.sortIndex > b.sortIndex ? 1 : -1);\r\n        const categoryNames = items.map(item => item.category).filter((value, index, self) => self.indexOf(value) === index);\r\n        categoryNames.forEach(categoryName => {\r\n          const category = {\r\n            'name': categoryName,\r\n            'items': items.filter(item => item.category === categoryName).sort((a, b) => a.sortIndex > b.sortIndex ? 1 : -1)\r\n          };\r\n          selectedByCategory.push(category);\r\n        });\r\n    }\r\n\r\n    return  (\r\n        <div className=\"tails-selected\">\r\n            <div className=\"big-title\">Selected</div>\r\n            {selectedByCategory.length\r\n                ? selectedByCategory.map(function(category) {\r\n                    return (\r\n                        <div className=\"selected-container\" key={category.name}>\r\n                            <div className=\"selected-title\">{category.name}</div>\r\n                            {category.items.map(item =>\r\n                                <SelectedItem\r\n                                    key={item.id}\r\n                                    item={item}\r\n                                    onDeleteItem={() => onDeleteItem(item.id)}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    )\r\n                })\r\n                : <div className=\"selected-none\">No content selected</div>\r\n            }\r\n        </div>\r\n    )  \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onDeleteItem: (id) => dispatch(deleteItem(id))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectedItemList);","import React from 'react';\nimport axios from 'axios';\nimport Category from './components/Category';\nimport SelectedItemList from './components/SelectedItemList';\n\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      categories: []\n    };\n    this.formatCatgories = this.formatCatgories.bind(this);\n  }\n\n  formatCatgories(data) {\n    let categories = []\n    const categoryNames = data.map(item => item.category).filter((value, index, self) => self.indexOf(value) === index);\n    categoryNames.forEach(categoryName => {\n      const category = {\n        'name': categoryName,\n        'items': data.filter(item => item.category === categoryName)\n      };\n      categories.push(category);\n    });\n    return categories;\n  }\n\n  componentDidMount() {\n    axios.get('./json/data.json')\n      .then((res) => {\n        const categories = this.formatCatgories(res.data);\n        this.setState({\n          items: res.data,\n          categories: categories\n        })\n      });\n  }\n\n  render() {\n    return (\n      <main>\n        <div className=\"tails\">\n          <div className=\"tails-options\">\n            <main>\n              {this.state.categories.length \n                ? this.state.categories.map((category, key) =>\n                    <Category {...category} key={key}/>\n                  )\n                : <span>Loading data...</span>\n              }            \n            </main>      \n          </div>\n          <div className=\"tails-selections\">\n            <aside>\n              <SelectedItemList />\n            </aside>  \n          </div>          \n        </div> \n      </main>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div>\r\n                FINAL FANTASY XIV © 2010 - 2019 SQUARE ENIX CO., LTD. All Rights Reserved.\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './reducers'\n\nimport './index.css';\nimport Header from './components/Header';\nimport App from './App';\nimport Footer from './components/Footer';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <Header />\n        <App />\n        <Footer />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}