{"version":3,"sources":["reducers/index.js","components/Header.js","components/Item.js","components/ItemList.js","actions/index.js","components/Category.js","components/SelectedItem.js","components/SelectedItemList.js","App.js","components/Footer.js","serviceWorker.js","index.js"],"names":["createStore","state","action","length","type","existingItem","filter","item","id","sortIndex","title","image","category","subcategory","Header","href","className","Item","tooltip","Tooltip","this","props","data-id","onClick","onAddItem","OverlayTrigger","placement","overlay","src","process","alt","React","Component","connect","dispatch","addItem","items","itemsBySubcategory","map","value","index","self","indexOf","forEach","subcategoryName","sort","a","b","push","key","name","Category","toggleItemList","bind","SelectedItem","onDeleteItem","icon","faTimes","size","deleteItem","selectedByCategory","categoryName","App","categories","formatCatgories","data","axios","get","then","res","setState","catch","err","console","error","Footer","Boolean","window","location","hostname","match","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c9728fa2.chunk.js","sourcesContent":["import { createStore } from 'redux'\r\n\r\nconst items = (state = [], action) => {\r\n    if (state.length && action.type === 'ADD_ITEM') {\r\n        const existingItem = state.filter((item) => item.id === action.id)[0];\r\n        if (existingItem) {\r\n            return state;\r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case 'ADD_ITEM':\r\n            return [...state, {\r\n                id: action.id,\r\n                sortIndex: action.sortIndex,\r\n                title: action.title,\r\n                image: action.image,\r\n                category: action.category,\r\n                subcategory: action.subcategory\r\n            }];\r\n        case 'DELETE_ITEM':\r\n            return state.filter(({id}) => id !== action.id);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default createStore(items);","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <div>\r\n                <nav>\r\n                    <div>\r\n                        <a href=\"./\">\r\n                            tails tracker\r\n                        </a>\r\n                        <div className=\"header-subtitle\">A Final Fantasy XIV Wondrous Tails To-do List</div>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\n\r\nclass Item extends React.Component {\r\n    render() {\r\n        const tooltip = (\r\n            <Tooltip>{this.props.title}</Tooltip>\r\n        );\r\n\r\n        return (\r\n            <div className=\"item\" data-id={this.props.id} onClick={() => this.props.onAddItem()}>\r\n                <OverlayTrigger placement=\"top\" overlay={tooltip}>\r\n                    <img src={`${process.env.PUBLIC_URL}/images/${this.props.image}`} alt={this.props.title} />\r\n                </OverlayTrigger>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Item;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../actions';\r\nimport Item from './Item';\r\n\r\nconst ItemList = ({ items, onAddItem }) => {\r\n\r\n    const itemsBySubcategory = [];\r\n    \r\n    if (items.length) {\r\n        const subcategoryNames = items.map(item => item.subcategory).filter((value, index, self) => self.indexOf(value) === index);\r\n        subcategoryNames.forEach(subcategoryName => {\r\n            const subcategory = {\r\n                'name': subcategoryName,\r\n                'items': items.filter(item => item.subcategory === subcategoryName).sort((a, b) => a.sortIndex > b.sortIndex ? 1 : -1)\r\n            }\r\n            itemsBySubcategory.push(subcategory);\r\n        });\r\n    }\r\n\r\n    return  (\r\n        <div className=\"category-items\">\r\n            {\r\n                itemsBySubcategory.map((subcategory, key) =>\r\n                    <div className=\"subcategory\" key={key}>\r\n                        {subcategory.name !== 'undefined'\r\n                        ? <div className=\"subcategory-title\">{subcategory.name}</div> \r\n                        : ''}\r\n                        <div className=\"subcategory-items\">\r\n                        {subcategory.items.map((item) =>\r\n                            <Item \r\n                                key={item.id}\r\n                                {...item}\r\n                                onAddItem={() => onAddItem(item)}\r\n                            />\r\n                        )}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAddItem: (item) => dispatch(addItem(item))\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ItemList);","export const addItem = (item) => {\r\n    return {\r\n        type: 'ADD_ITEM',\r\n        id: item.id,\r\n        sortIndex: item.sortIndex,\r\n        title: item.title,\r\n        image: item.image,\r\n        category: item.category,\r\n        subcategory: item.subcategory\r\n    };\r\n};\r\n\r\nexport const deleteItem = (id) => {\r\n    return {\r\n        type: 'DELETE_ITEM',\r\n        id\r\n    }\r\n}","import React from 'react';\r\nimport ItemList from './ItemList'\r\n\r\nclass Category extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.toggleItemList = this.toggleItemList.bind(this);\r\n    }\r\n\r\n    toggleItemList() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"category\">\r\n                <div className=\"big-title\" onClick={this.toggleItemList}>{this.props.name}</div>\r\n                <ItemList items={this.props.items} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Category;","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass SelectedItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"selected-item\" data-id={this.props.item.id}>\r\n                <div className=\"item-image\">\r\n                    <img src={`${process.env.PUBLIC_URL}/images/${this.props.item.image}`} alt={this.props.item.title} />\r\n                </div>\r\n                <div className=\"item-description\">\r\n                    <div className=\"item-title\">{this.props.item.title}</div>\r\n                    <div className=\"item-subcategory\">{this.props.item.subcategory}</div>\r\n                </div>\r\n                <div className=\"item-actions\">\r\n                    <button className=\"action-btn btn-delete\" onClick={() => this.props.onDeleteItem()}>\r\n                        <FontAwesomeIcon icon={faTimes} size=\"xs\" />\r\n                    </button>                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectedItem;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteItem } from '../actions/';\r\nimport SelectedItem from './SelectedItem';\r\n\r\nconst SelectedItemList = ({items, onDeleteItem}) => {\r\n\r\n    const selectedByCategory = [];\r\n\r\n    if (items.length) {\r\n        items.sort((a, b) => a.sortIndex > b.sortIndex ? 1 : -1);\r\n        const categoryNames = items.map(item => item.category).filter((value, index, self) => self.indexOf(value) === index);\r\n        categoryNames.forEach(categoryName => {\r\n          const category = {\r\n            'name': categoryName,\r\n            'items': items.filter(item => item.category === categoryName).sort((a, b) => a.sortIndex > b.sortIndex ? 1 : -1)\r\n          };\r\n          selectedByCategory.push(category);\r\n        });\r\n    }\r\n\r\n    return  (\r\n        <div className=\"tails-selected\">\r\n            <div className=\"big-title\">Selected</div>\r\n            {selectedByCategory.length\r\n                ? selectedByCategory.map(function(category) {\r\n                    return (\r\n                        <div className=\"selected-container\" key={category.name}>\r\n                            <div className=\"selected-title\">{category.name}</div>\r\n                            {category.items.map(item =>\r\n                                <SelectedItem\r\n                                    key={item.id}\r\n                                    item={item}\r\n                                    onDeleteItem={() => onDeleteItem(item.id)}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    )\r\n                })\r\n                : <div className=\"selected-none\">No content selected</div>\r\n            }\r\n        </div>\r\n    )  \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onDeleteItem: (id) => dispatch(deleteItem(id))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectedItemList);","import React from 'react';\r\nimport axios from 'axios';\r\nimport Category from './components/Category';\r\nimport SelectedItemList from './components/SelectedItemList';\r\n\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n      categories: []\r\n    };\r\n    this.formatCatgories = this.formatCatgories.bind(this);\r\n  }\r\n\r\n  formatCatgories(data) {\r\n    let categories = []\r\n    const categoryNames = data.map(item => item.category).filter((value, index, self) => self.indexOf(value) === index);\r\n    categoryNames.forEach(categoryName => {\r\n      const category = {\r\n        'name': categoryName,\r\n        'items': data.filter(item => item.category === categoryName)\r\n      };\r\n      categories.push(category);\r\n    });\r\n    return categories;\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`${process.env.PUBLIC_URL}/json/data.json`)\r\n      .then((res) => {\r\n        const categories = this.formatCatgories(res.data);\r\n        this.setState({\r\n          items: res.data,\r\n          categories: categories\r\n        })\r\n      })\r\n      .catch((err) => {\r\n\r\n        console.error(err)\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <div className=\"tails\">\r\n          <div className=\"tails-options\">\r\n            <main>\r\n              {this.state.categories.length \r\n                ? this.state.categories.map((category, key) =>\r\n                    <Category {...category} key={key}/>\r\n                  )\r\n                : <span>Loading data...</span>\r\n              }            \r\n            </main>      \r\n          </div>\r\n          <div className=\"tails-selections\">\r\n            <aside>\r\n              <SelectedItemList />\r\n            </aside>  \r\n          </div>          \r\n        </div> \r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div>\r\n                FINAL FANTASY XIV © 2010 - 2019 SQUARE ENIX CO., LTD. All Rights Reserved.\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './reducers'\r\n\r\nimport './index.css';\r\nimport Header from './components/Header';\r\nimport App from './App';\r\nimport Footer from './components/Footer';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Header />\r\n        <App />\r\n        <Footer />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}