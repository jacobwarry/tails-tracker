{"version":3,"sources":["reducers/index.js","components/Header.js","components/Item.js","components/ItemList.js","actions/index.js","components/Category.js","components/SelectedItem.js","components/SelectedItemList.js","App.js","serviceWorker.js","index.js"],"names":["change_item","state","action","type","id","count","createStore","length","existingItem","filter","item","title","image","map","Header","href","Item","tooltip","Tooltip","this","props","className","onClick","onAddItem","OverlayTrigger","placement","overlay","src","alt","React","Component","connect","dispatch","addItem","items","key","Category","name","SelectedItem","onIncrement","icon","faPlus","size","onDecrement","faMinus","onDeleteItem","faTrash","increment","decrement","deleteItem","App","categories","axios","get","then","res","setState","data","category","Boolean","window","location","hostname","match","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b870d8fe.chunk.js","sourcesContent":["import { createStore } from 'redux'\r\n\r\nconst change_item = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'INCREMENT':\r\n            if (state.id !== action.id) {\r\n                return state;\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                count: state.count+1\r\n            };\r\n        case 'DECREMENT':\r\n            if (state.id !== action.id) {\r\n                return state;\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                count: state.count-1\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst items = (state = [], action) => {\r\n    if (state.length) {\r\n        const existingItem = state.filter((item) => item.id === action.id)[0];\r\n        if (existingItem) {\r\n            switch (action.type) {\r\n                case 'ADD_ITEM':\r\n                    if (existingItem.count === 99) {\r\n                        return state;\r\n                    }                     \r\n                    action.type = 'INCREMENT';\r\n                    break;\r\n                case 'DECREMENT':\r\n                    if (existingItem.count === 1) {\r\n                        action.type = 'DELETE_ITEM';\r\n                    }\r\n                    break;\r\n                case 'INCREMENT':\r\n                    if (existingItem.count === 99) {\r\n                        return state;\r\n                    }               \r\n                    break;         \r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case 'ADD_ITEM':\r\n            return [...state, {\r\n                id: action.id,\r\n                title: action.title,\r\n                image: action.image,\r\n                count: 1}\r\n            ];\r\n        case 'DELETE_ITEM':\r\n            return state.filter(({id}) => id !== action.id);\r\n        case 'INCREMENT':\r\n            return state.map(item => change_item(item, action)); \r\n        case 'DECREMENT':\r\n            return state.map(item => change_item(item, action));\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default createStore(items);","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <div>\r\n                <nav>\r\n                    <div>\r\n                        <a href=\"/\">\r\n                            wondrous tails\r\n                        </a>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\n\r\nclass Item extends React.Component {\r\n    render() {\r\n        const tooltip = (\r\n            <Tooltip>{this.props.title}</Tooltip>\r\n        );\r\n\r\n        return (\r\n            <div className=\"item\" onClick={() => this.props.onAddItem()}>\r\n                <OverlayTrigger placement=\"top\" overlay={tooltip}>\r\n                    <img src={'./images/' + this.props.image} alt={this.props.title} />\r\n                </OverlayTrigger>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Item;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../actions';\r\nimport Item from './Item';\r\n\r\nconst ItemList = ({ items, onAddItem }) => {\r\n    return  (\r\n        <div className=\"category-items\">\r\n            {items.map(item => \r\n                <Item\r\n                    key={item.id}\r\n                    {...item}\r\n                    onAddItem={() => onAddItem(item)}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAddItem: (item) => dispatch(addItem(item))\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ItemList);","export const addItem = (item) => {\r\n    return {\r\n        type: 'ADD_ITEM',\r\n        id: item.id,\r\n        title: item.title,\r\n        image: item.image\r\n    };\r\n};\r\n\r\nexport const deleteItem = (id) => {\r\n    return {\r\n        type: 'DELETE_ITEM',\r\n        id\r\n    }\r\n}\r\n\r\nexport const increment = (id) => {\r\n    return {\r\n        type: 'INCREMENT',\r\n        id\r\n    };\r\n};\r\n\r\nexport const decrement = (id) => {\r\n    return {\r\n        type: 'DECREMENT',\r\n        id\r\n    };\r\n};","import React from 'react';\r\nimport ItemList from './ItemList'\r\n\r\nclass Category extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"category\">\r\n                <div className=\"big-title\">{this.props.name}</div>\r\n                <ItemList items={this.props.items} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Category;","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMinus, faPlus, faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass SelectedItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"selected-item\">\r\n            <div className=\"item-image\">\r\n                    <img src={'./images/' + this.props.item.image} alt={this.props.item.title} />\r\n                </div>\r\n                <div className=\"item-count\">{this.props.item.count}x</div> \r\n                <div className=\"item-title\">{this.props.item.title}</div>\r\n                <div className=\"item-actions\">\r\n                    <button className=\"action-btn btn-add\" onClick={() => this.props.onIncrement()}>\r\n                        <FontAwesomeIcon icon={faPlus} size=\"xs\"/>\r\n                    </button>\r\n                    <button className=\"action-btn btn-default\" onClick={() => this.props.onDecrement()}>\r\n                        <FontAwesomeIcon icon={faMinus} size=\"xs\" />\r\n                    </button>\r\n                    <button className=\"action-btn btn-delete\" onClick={() => this.props.onDeleteItem()}>\r\n                        <FontAwesomeIcon icon={faTrash} size=\"xs\" />\r\n                    </button>                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectedItem;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { increment, decrement, deleteItem } from '../actions/';\r\nimport SelectedItem from './SelectedItem';\r\n\r\nconst SelectedItemList = ({items, onIncrement, onDecrement, onDeleteItem}) => {\r\n    return  (\r\n        <div className=\"tails-selected\">\r\n            <div className=\"big-title\">Selected</div>\r\n        {items.length ? items.map(item => \r\n            <SelectedItem\r\n                key={item.id}\r\n                item={item}\r\n                onIncrement={() => onIncrement(item.id)}\r\n                onDecrement={() => onDecrement(item.id)}\r\n                onDeleteItem={() => onDeleteItem(item.id)}\r\n            />    \r\n        ) : <div>No items selected</div>}\r\n        </div>\r\n    )  \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onIncrement: (id) => dispatch(increment(id)),\r\n        onDecrement: (id) => dispatch(decrement(id)),\r\n        onDeleteItem: (id) => dispatch(deleteItem(id))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectedItemList);","import React from 'react';\nimport axios from 'axios';\nimport Category from './components/Category';\nimport SelectedItemList from './components/SelectedItemList';\n\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('./data.json')\n      .then((res) => {\n        this.setState({\n          categories: res.data\n        })\n      });\n  }\n\n  render() {\n    return (\n      <main>\n        <div className=\"tails\">\n          <div className=\"tails-options\">\n            <main>\n              {this.state.categories.map((category, key) =>\n                <Category {...category} key={key}/>\n              )}            \n            </main>      \n          </div>\n          <div className=\"tails-selections\">\n            <aside>\n              <SelectedItemList />\n            </aside>  \n          </div>          \n        </div> \n      </main>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './reducers'\n\nimport './index.css';\nimport Header from './components/Header';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <Header />\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}